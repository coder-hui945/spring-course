<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--把数据库的配置信息从jdbc.properties配置文件中读取，解耦合-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--声明数据源DataSource：连接数据库-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!--set注入，给DruidDataSource提供连接数据库的信息-->
        <property name="url" value="${jdbc.url}"/><!--serUrl()-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
    </bean>


    <!--声明mybatis中提供的SqlSessionFactoryBean类，这个类的内部创建SqlSessionFactory的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--set注入，把数据库连接池赋给dataSource-->
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配置文件的位置
        configLocation是Resource类型，读取配置文件的。赋值使用value，指定文件路径，使用classpath：表示文件位置
        -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <!--创建dao对象，使用sqlSession的getMapper（StudentDao.getClass）
    MapperScannerConfigurer类在内部调用getMapper（）生成每个dao接口的代理对象。

    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定sqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定包名，包名是dao接口所在的包名
        MapperScannerConfigurer类会扫描这个包中的所有接口，把每个接口都执行一次getMapper（）方法
        ，得到每个接口的dao对象。创建好的对象放入spring容器中统一管理。
        dao对象的默认名称为接口的名称（首字母小写）
        -->
        <property name="basePackage" value="com.wuminghui.dao"/><!--多个包用，分隔-->
    </bean>
        <!--声明service-->
    <bean id="studentService" class="com.wuminghui.service.impl.StudentServiceImpl">
        <property name="studentDao" ref="studentDao"></property><!--set注入，需要StudentServiceImpl提供set（）方法-->
    </bean>

</beans>